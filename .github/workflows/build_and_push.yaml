name: Build and push all the software images
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches:
      - main
env:
  IMAGE_REGISTRY: quay.io
  REGISTRY_USER: sughosh
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
jobs:
  build-image-and-push-backend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Setup Go environment
      uses: actions/setup-go@v4
      with:
        go-version: '^1.20.4'
    - name: Check go version
      run: go version
    - name: Log in to Quay.io
      uses: redhat-actions/podman-login@v1
      with:
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}
        registry: ${{ env.IMAGE_REGISTRY }}
    - name: Setup operator-sdk
      run: |
        cd ~/
        export ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac)
        export OS=$(uname | awk '{print tolower($0)}')
        export OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/latest/download
        curl -LO ${OPERATOR_SDK_DL_URL}/operator-sdk_${OS}_${ARCH}
        chmod +x operator-sdk_${OS}_${ARCH} && sudo mv operator-sdk_${OS}_${ARCH} /usr/local/bin/operator-sdk
        operator-sdk version
    # - name: Build and publish docker image
    #   env:
    #     IMAGE_NAME: isv-managed-starburst-operator
    #   run: |
    #     cd ${{ IMAGE_NAME}}
    #     BUILD_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
    #     echo Build version is: ${BUILD_VERSION}
    #     IMAGE_FULL=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${BUILD_VERSION}
    #     IMAGE_LATEST=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
    #     echo Building image: ${IMAGE_FULL}
    #     docker login "${{ env.IMAGE_REGISTRY }}" --username="${{ secrets.REGISTRY_USERNAME }}" --password="${{ secrets.REGISTRY_PASSWORD }}"
        
    #     docker build --build-arg BUILD_VERSION=${BUILD_VERSION} -t ${IMAGE_FULL} -f ./src/main/docker/Dockerfile.jvm .
    #     docker tag ${IMAGE_FULL} ${IMAGE_LATEST}
    #     docker push ${IMAGE_FULL}
    #     #docker push ${IMAGE_LATEST}